"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generate = void 0;
const moment_1 = __importDefault(require("moment"));
const cose = __importStar(require("@transmute/cose"));
const encoder = new TextEncoder();
const generate = (req) => __awaiter(void 0, void 0, void 0, function* () {
    if (req.type === 'application/jwk+json') {
        const obj = yield cose.key.generate(req.alg, 'application/jwk+json');
        const text = JSON.stringify(obj, null, 2);
        return encoder.encode(text);
    }
    if (req.type === 'application/cose-key') {
        const result = yield cose.key.generate(req.alg, 'application/cose-key');
        return new Uint8Array(cose.cbor.encode(result));
    }
    if (req.type === 'application/pkcs8') {
        const result = yield cose.certificate.root({
            alg: req.alg,
            iss: req.iss || 'vendor.example',
            sub: req.sub || 'vendor.example',
            nbf: req.nbf || (0, moment_1.default)().toISOString(),
            exp: req.nbf || (0, moment_1.default)().add(5, 'minutes').toISOString() // in 5 minutes
        });
        return encoder.encode(result.private);
    }
    throw new Error('Unsupported content type for private key');
});
exports.generate = generate;
