"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifier = exports.signer = void 0;
const sign1 = __importStar(require("../sign1"));
const cbor_1 = require("../../cbor");
const Params_1 = require("../Params");
const signer = ({ remote }) => {
    const coseSign1Signer = sign1.signer({ remote });
    return {
        sign: (req) => __awaiter(void 0, void 0, void 0, function* () {
            if (req.unprotectedHeader === undefined) {
                req.unprotectedHeader = (0, Params_1.UnprotectedHeader)([]);
            }
            const coseSign1 = yield coseSign1Signer.sign(req);
            const decoded = (0, cbor_1.decodeFirstSync)(coseSign1);
            decoded.value[2] = null;
            return (0, cbor_1.encodeAsync)(new cbor_1.Tagged(cbor_1.Sign1Tag, decoded.value), { canonical: true });
        })
    };
};
exports.signer = signer;
const verifier = ({ resolver }) => {
    const verifier = sign1.verifier({ resolver });
    return {
        verify: (req) => __awaiter(void 0, void 0, void 0, function* () {
            const decoded = (0, cbor_1.decodeFirstSync)(req.coseSign1);
            const payloadBuffer = (0, cbor_1.toArrayBuffer)(req.payload);
            decoded.value[2] = payloadBuffer;
            const attached = yield (0, cbor_1.encodeAsync)(new cbor_1.Tagged(cbor_1.Sign1Tag, decoded.value), { canonical: true });
            return verifier.verify({ coseSign1: attached });
        })
    };
};
exports.verifier = verifier;
