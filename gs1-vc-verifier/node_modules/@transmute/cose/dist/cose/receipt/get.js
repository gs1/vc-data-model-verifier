"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = void 0;
const cbor_1 = require("../../cbor");
const Params_1 = require("../Params");
const get = (signature) => __awaiter(void 0, void 0, void 0, function* () {
    const { tag, value } = (0, cbor_1.decodeFirstSync)(signature);
    if (tag !== cbor_1.Sign1Tag) {
        throw new Error('Receipts can only be added to cose-sign1');
    }
    if (!(value[1] instanceof Map)) {
        return [];
    }
    // unprotected header
    const receipts = value[1].get(Params_1.Receipts) || []; // see  https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture/
    return receipts;
});
exports.get = get;
