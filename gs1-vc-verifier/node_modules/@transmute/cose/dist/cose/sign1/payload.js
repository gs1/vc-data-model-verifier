"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.attach = void 0;
const cbor_1 = require("../../cbor");
const attach = (coseSign1Bytes, payload) => __awaiter(void 0, void 0, void 0, function* () {
    const obj = yield (0, cbor_1.decodeFirst)(coseSign1Bytes);
    const signatureStructure = obj.value;
    const [protectedHeaderBytes, unprotectedHeader, currentPayload, signature] = signatureStructure;
    if (currentPayload !== null) {
        throw new Error('Payload is already attached');
    }
    const attached = (0, cbor_1.encode)(['Signature1', protectedHeaderBytes, unprotectedHeader, payload, signature]);
    return attached;
});
exports.attach = attach;
