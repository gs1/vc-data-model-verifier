"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iana = void 0;
const algorithms_1 = require("../cose/algorithms");
const algorithms = Object.values(algorithms_1.IANACOSEAlgorithms);
const ESP256 = {
    Name: 'ESP256',
    Value: '-9'
};
const ESP384 = {
    Name: 'ESP384',
    Value: '-48'
};
const fullySpecifiedByName = {
    ESP256,
    ESP384
};
const fullySpecifiedByLabel = {
    [ESP256.Value]: ESP256,
    [ESP384.Value]: ESP384,
};
exports.iana = {
    'COSE Algorithms': {
        'less-specified': (alg) => {
            if (alg === 'ESP256') {
                return 'ES256';
            }
            if (alg === 'ESP384') {
                return 'ES384';
            }
            return alg;
        },
        getByName: (name) => {
            const foundAlgorithm = algorithms.find((param) => {
                return param.Name === name;
            });
            if (foundAlgorithm && foundAlgorithm.Name !== 'Unassigned') {
                return foundAlgorithm;
            }
            // extensions
            if (fullySpecifiedByName[name]) {
                return fullySpecifiedByName[name];
            }
        },
        getByValue: (value) => {
            const foundAlgorithm = algorithms.find((param) => {
                return param.Value === `${value}`;
            });
            if (foundAlgorithm && foundAlgorithm.Name !== 'Unassigned') {
                return foundAlgorithm;
            }
            // extensions
            if (fullySpecifiedByLabel[`${value}`]) {
                return fullySpecifiedByLabel[`${value}`];
            }
        }
    }
};
