import { YAMLMap, parse } from "yaml";
declare const YAML: {
    load: (data: string) => YAMLMap<unknown, unknown>;
    issuancePayload: (doc: any, config: any) => Promise<any>;
    parseCustomTags: (data: string) => import("yaml").Document.Parsed<import("yaml").Alias.Parsed, true> | import("yaml").Document.Parsed<import("yaml").Scalar.Parsed, true> | import("yaml").Document.Parsed<YAMLMap.Parsed<import("yaml").ParsedNode, import("yaml").ParsedNode | null>, true> | import("yaml").Document.Parsed<import("yaml").YAMLSeq.Parsed<import("yaml").ParsedNode>, true>;
    loads: typeof parse;
    dumps: (data: any) => string;
    disclose: (source: string, target: string) => string;
    roughlyEqual: (a: string, b: string) => boolean;
};
export default YAML;
