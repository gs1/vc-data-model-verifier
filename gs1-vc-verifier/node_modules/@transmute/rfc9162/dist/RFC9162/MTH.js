"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MTH = void 0;
const HASH_1 = require("./HASH");
const CONCAT_1 = require("./CONCAT");
const hexToBin_1 = require("./hexToBin");
const strToBin_1 = require("./strToBin");
const highestPowerOf2LessThanN_1 = require("./highestPowerOf2LessThanN");
const CUT_1 = require("./CUT");
const EMPTY_STRING = (0, strToBin_1.strToBin)('');
const MTH = (entries) => __awaiter(void 0, void 0, void 0, function* () {
    const n = entries.length;
    if (n === 0) {
        return (0, HASH_1.HASH)(EMPTY_STRING);
    }
    if (n === 1) {
        const prefix = (0, hexToBin_1.hexToBin)('00');
        return (0, HASH_1.HASH)((0, CONCAT_1.CONCAT)(prefix, entries[0]));
    }
    const k = (0, highestPowerOf2LessThanN_1.highestPowerOf2LessThanN)(n);
    // console.log({k, n})
    const left = (0, CUT_1.CUT)(entries, 0, k);
    const right = (0, CUT_1.CUT)(entries, k, n);
    const prefix = (0, hexToBin_1.hexToBin)('01');
    return (0, HASH_1.HASH)((0, CONCAT_1.CONCAT)(prefix, (0, CONCAT_1.CONCAT)(yield (0, exports.MTH)(left), yield (0, exports.MTH)(right))));
});
exports.MTH = MTH;
