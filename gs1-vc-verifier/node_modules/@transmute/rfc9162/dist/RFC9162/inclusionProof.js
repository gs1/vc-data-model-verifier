"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.inclusionProof = void 0;
const EQUAL_1 = require("./EQUAL");
const PATH_1 = require("./PATH");
const inclusionProof = (entry, entries) => __awaiter(void 0, void 0, void 0, function* () {
    const m = entries.findIndex((value) => {
        return (0, EQUAL_1.EQUAL)(value, entry);
    });
    if (m === -1) {
        throw new Error('Entry is not included in log.');
    }
    return {
        log_id: '',
        tree_size: entries.length,
        leaf_index: m,
        inclusion_path: yield (0, PATH_1.PATH)(m, entries),
    };
});
exports.inclusionProof = inclusionProof;
