"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLeafFromEntry = void 0;
const HASH_1 = require("../RFC9162/HASH");
const CONCAT_1 = require("../RFC9162/CONCAT");
const hexToBin_1 = require("../RFC9162/hexToBin");
const getLeafFromEntry = (entry) => __awaiter(void 0, void 0, void 0, function* () {
    if (!entry) {
        throw new Error('getLeafFromEntry requires a Uint8Array entry.');
    }
    const prefix = (0, hexToBin_1.hexToBin)('00');
    return yield (0, HASH_1.HASH)((0, CONCAT_1.CONCAT)(prefix, entry));
});
exports.getLeafFromEntry = getLeafFromEntry;
